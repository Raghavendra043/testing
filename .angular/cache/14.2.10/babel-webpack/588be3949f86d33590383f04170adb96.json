{"ast":null,"code":"import _asyncToGenerator from \"D:/Users/raghavendra/Desktop/ODE/OPTH/New folder/testing/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport moment from 'moment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/state-services/state-passing.service\";\nimport * as i2 from \"src/app/services/rest-api-services/acknowledgements.service\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../../header/header/header.component\";\nimport * as i6 from \"../../loading/loading-state/loading-state.component\";\nfunction AcknowledgementsComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"i\", 7);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const acknowledgement_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(acknowledgement_r1.message);\n  }\n}\nexport let AcknowledgementsComponent = /*#__PURE__*/(() => {\n  class AcknowledgementsComponent {\n    constructor(appContext, acknowledgements, translateService) {\n      this.appContext = appContext;\n      this.acknowledgements = acknowledgements;\n      this.translateService = translateService;\n      this.model = {\n        state: 'Loading',\n        acknowledgements: []\n      };\n      this.formatTexts = acknowledgement => {\n        const uploadDate = moment(acknowledgement.uploadTimestamp).format('LL');\n        const uploadTime = moment(acknowledgement.uploadTimestamp).format('LT');\n        const ackDate = moment(acknowledgement.acknowledgementTimestamp).format('LL');\n        const ackTime = moment(acknowledgement.acknowledgementTimestamp).format('LT');\n        switch (acknowledgement.type) {\n          case 'questionnaire':\n            acknowledgement.message = this.translateService.instant('ACKNOWLEDGEMENTS_COMPLETED_QUESTIONNAIRE').replace('{0}', acknowledgement.name).replace('{1}', uploadDate).replace('{2}', uploadTime).replace('{3}', ackDate).replace('{4}', ackTime);\n            break;\n          case 'externalMeasurement':\n            acknowledgement.message = this.translateService.instant('ACKNOWLEDGEMENTS_EXTERNAL_MEASUREMENT').replace('{0}', uploadDate).replace('{1}', uploadTime).replace('{2}', ackDate).replace('{3}', ackTime);\n            break;\n        }\n      };\n      this.user = this.appContext.getUser();\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        try {\n          const acknowledgements = yield _this.acknowledgements.list(_this.user);\n          acknowledgements.map(_this.formatTexts);\n          _this.model.state = 'Loaded';\n          _this.model.acknowledgements = acknowledgements;\n        } catch (e) {\n          _this.model.state = 'Failed';\n          console.error(`Failed to load acknowledgements due to error: ${e}`);\n        }\n      })();\n    }\n  }\n  AcknowledgementsComponent.ɵfac = function AcknowledgementsComponent_Factory(t) {\n    return new (t || AcknowledgementsComponent)(i0.ɵɵdirectiveInject(i1.StatePassingService), i0.ɵɵdirectiveInject(i2.AcknowledgementsService), i0.ɵɵdirectiveInject(i3.TranslateService));\n  };\n  AcknowledgementsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AcknowledgementsComponent,\n    selectors: [[\"app-acknowledgements\"]],\n    decls: 6,\n    vars: 8,\n    consts: [[1, \"container\"], [3, \"showBackBtn\", \"title\"], [1, \"content\"], [3, \"stateModel\", \"hasNoData\", \"noDataMessage\", \"loadingMessage\", \"failedMessage\"], [1, \"acknowledgements_list\"], [\"class\", \"acknowledgement_list_item\", 4, \"ngFor\", \"ngForOf\"], [1, \"acknowledgement_list_item\"], [\"aria-hidden\", \"true\", 1, \"icon\", \"fas\", \"fa-check-circle\"]],\n    template: function AcknowledgementsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"header-menu\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"loading-state\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtemplate(5, AcknowledgementsComponent_div_5_Template, 4, 1, \"div\", 5);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"showBackBtn\", true)(\"title\", \"ACKNOWLEDGEMENTS_TITLE\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"stateModel\", ctx.model.state)(\"hasNoData\", ctx.model.acknowledgements.length === 0)(\"noDataMessage\", \"ACKNOWLEDGEMENTS_NO_ACKNOWLEDGEMENTS\")(\"loadingMessage\", \"ACKNOWLEDGEMENTS_LOADING\")(\"failedMessage\", \"ACKNOWLEDGEMENTS_FAILED\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.acknowledgements);\n      }\n    },\n    dependencies: [i4.NgForOf, i5.HeaderComponent, i6.LoadingStateComponent]\n  });\n  return AcknowledgementsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
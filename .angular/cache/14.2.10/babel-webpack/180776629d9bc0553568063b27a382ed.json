{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@ngx-translate/core\";\nfunction LoadingStateComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r0.loadingMessage), \"\\n\");\n  }\n}\nfunction LoadingStateComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelement(1, \"i\", 4);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r1.noDataMessage), \"\\n\");\n  }\n}\nfunction LoadingStateComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"i\", 7);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r2.failedMessage), \"\\n\");\n  }\n}\nexport let LoadingStateComponent = /*#__PURE__*/(() => {\n  class LoadingStateComponent {\n    constructor() {\n      this.stateModel = 'Loading';\n      this.noDataMessage = '';\n      this.loadingMessage = '';\n      this.failedMessage = '';\n    }\n  }\n  LoadingStateComponent.ɵfac = function LoadingStateComponent_Factory(t) {\n    return new (t || LoadingStateComponent)();\n  };\n  LoadingStateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingStateComponent,\n    selectors: [[\"loading-state\"]],\n    inputs: {\n      stateModel: \"stateModel\",\n      hasNoData: \"hasNoData\",\n      noDataMessage: \"noDataMessage\",\n      loadingMessage: \"loadingMessage\",\n      failedMessage: \"failedMessage\"\n    },\n    decls: 3,\n    vars: 3,\n    consts: [[\"id\", \"notification-loading\", \"class\", \"notification info\", 4, \"ngIf\"], [\"id\", \"notification-no-data\", \"class\", \"notification info\", 4, \"ngIf\"], [\"id\", \"notification-error\", \"class\", \"notification error\", 4, \"ngIf\"], [\"id\", \"notification-loading\", 1, \"notification\", \"info\"], [1, \"notification_icon\", \"fas\", \"fa-info-circle\"], [\"id\", \"notification-no-data\", 1, \"notification\", \"info\"], [\"id\", \"notification-error\", 1, \"notification\", \"error\"], [1, \"notification_icon\", \"fas\", \"fa-exclamation-triangle\"]],\n    template: function LoadingStateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, LoadingStateComponent_div_0_Template, 4, 3, \"div\", 0);\n        i0.ɵɵtemplate(1, LoadingStateComponent_div_1_Template, 4, 3, \"div\", 1);\n        i0.ɵɵtemplate(2, LoadingStateComponent_div_2_Template, 4, 3, \"div\", 2);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.stateModel === \"Loading\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.stateModel === \"Loaded\" && ctx.hasNoData);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.stateModel === \"Failed\");\n      }\n    },\n    dependencies: [i1.NgIf, i2.TranslatePipe]\n  });\n  return LoadingStateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Users/raghavendra/Desktop/ODE/OPTH/New folder/testing/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let AcknowledgementsService = /*#__PURE__*/(() => {\n  class AcknowledgementsService {\n    constructor(http) {\n      this.http = http;\n    }\n    list(user) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        var _a;\n        if (((_a = user === null || user === void 0 ? void 0 : user.links) === null || _a === void 0 ? void 0 : _a.acknowledgements) === undefined) {\n          throw new TypeError('User object does not contain a link relation to acknowledgements');\n        } else {\n          const acknowledgements = user.links.acknowledgements;\n          const results = yield lastValueFrom(_this.http.get(acknowledgements));\n          return results.acknowledgements.map(_this.toAcknowledgement);\n        }\n      })();\n    }\n    toAcknowledgement(acknowledgement) {\n      return Object.assign(Object.assign({}, acknowledgement), {\n        uploadTimestamp: new Date(acknowledgement.uploadTimestamp),\n        acknowledgementTimestamp: new Date(acknowledgement.acknowledgementTimestamp)\n      });\n    }\n  }\n  AcknowledgementsService.ɵfac = function AcknowledgementsService_Factory(t) {\n    return new (t || AcknowledgementsService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  AcknowledgementsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AcknowledgementsService,\n    factory: AcknowledgementsService.ɵfac,\n    providedIn: 'root'\n  });\n  return AcknowledgementsService;\n})();","map":null,"metadata":{},"sourceType":"module"}
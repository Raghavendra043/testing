{"ast":null,"code":"import { StatusType } from \"./listener.type\";\nexport const meterTypes = {\n  ACTIVITY_TRACKER: {\n    name: \"activity tracker\",\n    parameters: [],\n    measurementTypeName: \"activity\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"dailySteps\",\n      unit: \"step count\",\n      value: \"dailySteps\"\n    }, {\n      kind: \"single\",\n      name: \"dailyStepsWeeklyAverage\",\n      unit: \"step count\",\n      value: \"dailyStepsWeeklyAverage\"\n    }, {\n      kind: \"single\",\n      name: \"dailyStepsHistoricalMeasurements\",\n      unit: \"step count\",\n      value: \"dailyStepsHistoricalMeasurements\"\n    }],\n    statusHandlers: {\n      progress: (nodeModel, status) => {\n        if (status.type === \"progress\") {\n          nodeModel.progress = status.progress;\n        }\n      }\n    }\n  },\n  BLOOD_PRESSURE_MONITOR: {\n    name: \"blood pressure monitor\",\n    parameters: [],\n    measurementTypeName: \"blood_pressure\",\n    measurementTypes: [{\n      kind: \"multiple\",\n      name: \"blood pressure\",\n      unit: \"mmHg\",\n      values: [\"systolic\", \"diastolic\", \"meanArterialPressure\"]\n    }, {\n      kind: \"single\",\n      name: \"pulse\",\n      unit: \"BPM\",\n      value: \"pulse\"\n    }]\n  },\n  ECG: {\n    name: \"ecg\",\n    parameters: [\"sampleTimeInSeconds\"],\n    measurementTypeName: \"ecg\",\n    measurementTypes: [{\n      kind: \"multiple\",\n      name: \"ecg\",\n      values: [\"startTime\", \"duration\", \"frequency\", \"rrIntervals\", \"samples\"]\n    }],\n    statusHandlers: {\n      progress: (nodeModel, event) => {\n        const ecgModel = nodeModel;\n        const calculateProgressInPercent = (sampleTime, progress) => progress / sampleTime * 100;\n        const calculateSecondsRemaining = (sampleTime, progress) => sampleTime - progress;\n        if (event.type == StatusType.PROGRESS) {\n          const progress = event.progress;\n          const sampleTime = ecgModel.sampleTime;\n          ecgModel.progress = calculateProgressInPercent(sampleTime, progress);\n          ecgModel.remaining = calculateSecondsRemaining(sampleTime, progress);\n        }\n      }\n    }\n  },\n  GLUCOMETER: {\n    name: \"glucometer\",\n    parameters: [],\n    measurementTypeName: \"blood_sugar\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"blood sugar\",\n      unit: \"mmol/L\",\n      value: \"bloodSugarMeasurements\"\n    }]\n  },\n  OXIMETER: {\n    name: \"oximeter\",\n    parameters: [],\n    measurementTypeName: \"saturation\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"saturation\",\n      unit: \"%\",\n      value: \"saturation\"\n    }, {\n      kind: \"single\",\n      name: \"pulse\",\n      unit: \"BPM\",\n      value: \"pulse\"\n    }]\n  },\n  OXYGEN_FLOW: {\n    name: \"oxygen flow\",\n    parameters: [],\n    measurementTypeName: \"oxygen_flow\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"oxygenFlow\",\n      unit: \"L/min\",\n      value: \"oxygenFlow\"\n    }]\n  },\n  OXIMETER_WITHOUT_PULSE: {\n    name: \"oximeter\",\n    parameters: [],\n    measurementTypeName: \"saturation\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"saturation\",\n      unit: \"%\",\n      value: \"saturation\"\n    }]\n  },\n  PULSE: {\n    name: \"pulse\",\n    parameters: [],\n    measurementTypeName: \"pulse\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"pulse\",\n      unit: \"BPM\",\n      value: \"pulse\"\n    }]\n  },\n  RESPIRATORY_RATE: {\n    name: \"respiratory rate\",\n    parameters: [],\n    measurementTypeName: \"respiratory_rate\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"respiratoryRate\",\n      unit: \"RR\",\n      value: \"respiratoryRate\"\n    }]\n  },\n  SPIROMETER: {\n    name: \"spirometer\",\n    parameters: [],\n    measurementTypeName: \"spirometry\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"fev1\",\n      unit: \"L\",\n      value: \"fev1\"\n    }, {\n      kind: \"single\",\n      name: \"fev6\",\n      unit: \"L\",\n      value: \"fev6\"\n    }, {\n      kind: \"single\",\n      name: \"fev1/fev6\",\n      unit: \"%\",\n      value: \"fev1/fev6\"\n    }, {\n      kind: \"single\",\n      name: \"fef25-75%\",\n      unit: \"L/s\",\n      value: \"fef25-75%\"\n    }]\n  },\n  THERMOMETER: {\n    name: \"thermometer\",\n    parameters: [],\n    measurementTypeName: \"temperature\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"temperature\",\n      unit: \"Â°C\",\n      value: \"temperature\"\n    }]\n  },\n  WEIGHT_SCALE: {\n    name: \"weight scale\",\n    parameters: [],\n    measurementTypeName: \"weight\",\n    measurementTypes: [{\n      kind: \"single\",\n      name: \"weight\",\n      unit: \"kg\",\n      value: \"weight\"\n    }]\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
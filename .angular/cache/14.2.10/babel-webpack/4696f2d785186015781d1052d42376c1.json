{"ast":null,"code":"import { ROOT_RESOURCE } from \"@utils/globals\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/oidc-services/oidc-utils.service\";\nimport * as i2 from \"src/app/services/state-services/user-session.service\";\nimport * as i3 from \"src/app/services/rest-api-services/authentication.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ngx-translate/core\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../../header/header/header.component\";\nfunction OidcStartLoginComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelement(1, \"i\", 10);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(4, 2, ctx_r0.errorMessage), \" \", ctx_r0.errorDescription, \"\");\n  }\n}\nfunction OidcStartLoginComponent_input_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 11);\n    i0.ɵɵlistener(\"click\", function OidcStartLoginComponent_input_10_Template_input_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.sendOIDCAuthRequest());\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵpropertyInterpolate(\"value\", i0.ɵɵpipeBind1(1, 1, \"OIDC_SIGN_IN_TEXT\"));\n  }\n}\nexport let OidcStartLoginComponent = /*#__PURE__*/(() => {\n  class OidcStartLoginComponent {\n    constructor(oidcUtils, userSession, authentication, router, translate, oidcService) {\n      this.oidcUtils = oidcUtils;\n      this.userSession = userSession;\n      this.authentication = authentication;\n      this.router = router;\n      this.translate = translate;\n      this.oidcService = oidcService;\n      this.errorMessage = \"\";\n      this.oidcSignIn = false;\n      this.infoText = \"\";\n      this.errorDescription = \"\";\n    }\n    sendOIDCAuthRequest() {\n      this.oidcUtils.sendAuthRequest();\n    }\n    setInitialState() {\n      this.authentication.setCanChangePassword(false);\n      ROOT_RESOURCE.delete();\n      this.errorMessage = \"\";\n      this.oidcSignIn = false;\n      this.infoText = this.translate.instant(\"OIDC_INFO_TEXT\");\n    }\n    pinCodeRequired(response) {\n      return response && response.code === \"PINCODE_REQUIRED\";\n    }\n    startLogin(root) {\n      const loginNotCompleted = response => {\n        const status = response.status;\n        const data = response.data;\n        switch (status) {\n          case -1:\n          case 401:\n            if (this.pinCodeRequired(data)) {\n              console.info(\"Need PIN-code login\");\n              this.router.navigate([\"/pincode_login\"]);\n              return;\n            }\n            // sessionStorage is needed since we leave the app and the comes back...\n            ROOT_RESOURCE.set(root);\n            console.debug(`Setting root: ${JSON.stringify(root)}`);\n            console.info(\"Unable to login using refresh token. OIDC login needed.\");\n            this.oidcSignIn = true;\n            // Force oidc service to be called due to async oidc success\n            // call in app.component where ROOT_RESOURCE needs to be set\n            this.oidcService.runOIDC();\n            break;\n          default:\n            console.error(`Silent login failed with unexpected error: ${status} ` + JSON.stringify(data, null, 4));\n            this.errorMessage = \"OPENTELE_DOWN_TEXT\";\n            break;\n        }\n      };\n      this.userSession.startSilentLogin(root, loginNotCompleted);\n    }\n    connectionError() {\n      this.errorMessage = \"OPENTELE_UNAVAILABLE_TEXT\";\n    }\n    checkForErrors() {\n      const params = this.oidcUtils.parseQueryString();\n      if (\"error\" in params) {\n        this.errorMessage = \"OIDC_LOGIN_FAILED\";\n        console.error(\"Error from OIDC provider: \" + params.error);\n        if (\"error_description\" in params) {\n          this.errorDescription = params.error_description;\n          console.error(\"Description: \" + params.error_description);\n        }\n        this.oidcSignIn = true;\n        return;\n      }\n    }\n    ngOnInit() {\n      this.setInitialState();\n      this.userSession.init().then(res => {\n        this.startLogin(res);\n      }).catch(e => {\n        console.error(e);\n        this.connectionError();\n      });\n    }\n  }\n  OidcStartLoginComponent.ɵfac = function OidcStartLoginComponent_Factory(t) {\n    return new (t || OidcStartLoginComponent)(i0.ɵɵdirectiveInject(i1.OidcUtilsService), i0.ɵɵdirectiveInject(i2.UserSessionService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.TranslateService), i0.ɵɵdirectiveInject(i1.OidcUtilsService));\n  };\n  OidcStartLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OidcStartLoginComponent,\n    selectors: [[\"app-oidc-start-login\"]],\n    decls: 11,\n    vars: 6,\n    consts: [[1, \"container\"], [3, \"showLogo\"], [1, \"content\", \"space_between\"], [\"id\", \"info-box-container\"], [\"id\", \"disclaimer-text\"], [\"class\", \"notification error\", 4, \"ngIf\"], [1, \"fill\"], [\"id\", \"input-container\"], [\"id\", \"oidc-sign-in\", \"type\", \"submit\", \"class\", \"list_item confirm-btn\", 3, \"value\", \"click\", 4, \"ngIf\"], [1, \"notification\", \"error\"], [1, \"notification_icon\", \"fas\", \"fa-exclamation-triangle\"], [\"id\", \"oidc-sign-in\", \"type\", \"submit\", 1, \"list_item\", \"confirm-btn\", 3, \"value\", \"click\"]],\n    template: function OidcStartLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"header-menu\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, OidcStartLoginComponent_div_7_Template, 5, 4, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.ɵɵtemplate(10, OidcStartLoginComponent_input_10_Template, 2, 3, \"input\", 8);\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"showLogo\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 4, \"OIDC_INFO_TEXT\"), \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.oidcSignIn);\n      }\n    },\n    dependencies: [i6.NgIf, i7.HeaderComponent, i5.TranslatePipe]\n  });\n  return OidcStartLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
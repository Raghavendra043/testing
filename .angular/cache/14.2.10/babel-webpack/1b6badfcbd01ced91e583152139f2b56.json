{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport { FilterType } from '@app/types/filter.type';\nimport { MeasurementModel, SingleValueTableDatum, MultiValueTableDatum } from '@app/types/model.type';\nimport { MeasurementTypeName } from '@app/types/measurement-types.type';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/state-services/state-passing.service\";\nimport * as i2 from \"@services/state-services/config.service\";\nimport * as i3 from \"@services/plot-services/tables.service\";\nimport * as i4 from \"@services/plot-services/graphs.service\";\nimport * as i5 from \"@services/rest-api-services/measurements.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../header/header/header.component\";\nimport * as i8 from \"../../loading/loading-state/loading-state.component\";\nimport * as i9 from \"ng2-charts\";\nimport * as i10 from \"@pipes/severity.pipe\";\nimport * as i11 from \"@pipes/constraint.pipe\";\nimport * as i12 from \"@ngx-translate/core\";\nimport * as i13 from \"ngx-moment\";\nconst _c0 = function (a0) {\n  return {\n    selected_data_range_selector: a0\n  };\n};\nfunction MyMeasurementComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_4_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const filter_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.showFilter(filter_r3.filter));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const filter_r3 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c0, filter_r3.filter === ctx_r0.model.filter));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 2, filter_r3.label), \" \");\n  }\n}\nfunction MyMeasurementComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"canvas\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r6.model.graph.type)(\"data\", ctx_r6.model.graph.data)(\"options\", ctx_r6.model.graph.options);\n  }\n}\nfunction MyMeasurementComponent_div_6_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelement(1, \"canvas\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", ctx_r7.model.graphStandardDay.type)(\"data\", ctx_r7.model.graphStandardDay.data)(\"options\", ctx_r7.model.graphStandardDay.options);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"hide-comment-icon\": a0\n  };\n};\nfunction MyMeasurementComponent_div_6_table_4_tr_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 19);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_4_tr_10_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const tableDatum_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r13.showPopup(tableDatum_r12));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"span\", 20);\n    i0.ɵɵelement(6, \"i\", 21);\n    i0.ɵɵpipe(7, \"severity\");\n    i0.ɵɵelementStart(8, \"span\", 22);\n    i0.ɵɵelement(9, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"span\", 24);\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"number\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const tableDatum_r12 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 4, tableDatum_r12.timestamp, ctx_r11.model.table.options.dateFormat));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpipeBind2(7, 7, tableDatum_r12.severity, ctx_r11.shouldShowSeverity));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, !tableDatum_r12.comment));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.model.table.options.numberFormat ? i0.ɵɵpipeBind2(12, 10, tableDatum_r12.value, ctx_r11.model.table.options.numberFormat) : tableDatum_r12.value, \" \");\n  }\n}\nfunction MyMeasurementComponent_div_6_table_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 17)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"translate\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(9, \"tbody\");\n    i0.ɵɵtemplate(10, MyMeasurementComponent_div_6_table_4_tr_10_Template, 13, 15, \"tr\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"tfoot\")(12, \"tr\");\n    i0.ɵɵelement(13, \"td\")(14, \"td\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 3, \"TIMESTAMP\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(8, 5, ctx_r8.model.table.options.unit), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.model.table.data);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_5_th_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r18 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, unit_r18));\n  }\n}\nfunction MyMeasurementComponent_div_6_table_5_tr_9_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\")(1, \"span\", 20);\n    i0.ɵɵelement(2, \"i\", 28);\n    i0.ɵɵpipe(3, \"severity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 24);\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const valueAndSeverity_r21 = ctx.$implicit;\n    const i_r22 = ctx.index;\n    const ctx_r20 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpipeBind1(3, 2, valueAndSeverity_r21.severity));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(6, 4, valueAndSeverity_r21.value, ctx_r20.model.table.options.numberFormats[i_r22]), \" \");\n  }\n}\nfunction MyMeasurementComponent_div_6_table_5_tr_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 19);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_5_tr_9_Template_tr_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r24);\n      const tableDatum_r19 = restoredCtx.$implicit;\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r23.showPopup(tableDatum_r19));\n    });\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\")(5, \"span\", 22);\n    i0.ɵɵelement(6, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(7, MyMeasurementComponent_div_6_table_5_tr_9_td_7_Template, 7, 7, \"td\", 27);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const tableDatum_r19 = ctx.$implicit;\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 3, tableDatum_r19.timestamp, ctx_r16.model.table.options.dateFormat));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c1, !tableDatum_r19.comment));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", tableDatum_r19.values);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_5_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"td\");\n  }\n}\nfunction MyMeasurementComponent_div_6_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 25)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"th\", 26);\n    i0.ɵɵtemplate(7, MyMeasurementComponent_div_6_table_5_th_7_Template, 3, 3, \"th\", 27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"tbody\");\n    i0.ɵɵtemplate(9, MyMeasurementComponent_div_6_table_5_tr_9_Template, 8, 8, \"tr\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"tfoot\")(11, \"tr\");\n    i0.ɵɵelement(12, \"td\")(13, \"td\");\n    i0.ɵɵtemplate(14, MyMeasurementComponent_div_6_table_5_td_14_Template, 1, 0, \"td\", 27);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 4, \"TIMESTAMP\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.model.table.options.units);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.model.table.data);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r9.model.table.options.units);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_tr_23_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_6_tr_23_div_5_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r34);\n      const tableDatum_r32 = restoredCtx.$implicit;\n      const ctx_r33 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r33.showPopup(tableDatum_r32));\n    });\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵelement(3, \"i\", 28);\n    i0.ɵɵelementStart(4, \"span\", 22);\n    i0.ɵɵelement(5, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"span\", 33);\n    i0.ɵɵpipe(7, \"constraintColor\");\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableDatum_r32 = ctx.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r28.severity(tableDatum_r32.severity));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, !tableDatum_r32.comment));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(7, 3, i0.ɵɵpipeBind2(8, 6, tableDatum_r32.value, \"1.1-1\"), tableDatum_r32.constraint), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_tr_23_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_6_tr_23_div_7_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r37);\n      const tableDatum_r35 = restoredCtx.$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r36.showPopup(tableDatum_r35));\n    });\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵelement(3, \"i\", 28);\n    i0.ɵɵelementStart(4, \"span\", 22);\n    i0.ɵɵelement(5, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"span\", 33);\n    i0.ɵɵpipe(7, \"constraintColor\");\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableDatum_r35 = ctx.$implicit;\n    const ctx_r29 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r29.severity(tableDatum_r35.severity));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, !tableDatum_r35.comment));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(7, 3, i0.ɵɵpipeBind2(8, 6, tableDatum_r35.value, \"1.1-1\"), tableDatum_r35.constraint), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_tr_23_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r40 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_6_tr_23_div_9_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r40);\n      const tableDatum_r38 = restoredCtx.$implicit;\n      const ctx_r39 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r39.showPopup(tableDatum_r38));\n    });\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵelement(3, \"i\", 28);\n    i0.ɵɵelementStart(4, \"span\", 22);\n    i0.ɵɵelement(5, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"span\", 33);\n    i0.ɵɵpipe(7, \"constraintColor\");\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableDatum_r38 = ctx.$implicit;\n    const ctx_r30 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r30.severity(tableDatum_r38.severity));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, !tableDatum_r38.comment));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(7, 3, i0.ɵɵpipeBind2(8, 6, tableDatum_r38.value, \"1.1-1\"), tableDatum_r38.constraint), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_tr_23_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r43 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 32);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_6_table_6_tr_23_div_11_Template_div_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r43);\n      const tableDatum_r41 = restoredCtx.$implicit;\n      const ctx_r42 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r42.showPopup(tableDatum_r41));\n    });\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵelement(3, \"i\", 28);\n    i0.ɵɵelementStart(4, \"span\", 22);\n    i0.ɵɵelement(5, \"i\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"span\", 33);\n    i0.ɵɵpipe(7, \"constraintColor\");\n    i0.ɵɵpipe(8, \"number\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const tableDatum_r41 = ctx.$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", ctx_r31.severity(tableDatum_r41.severity));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(9, _c1, !tableDatum_r41.comment));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind2(7, 3, i0.ɵɵpipeBind2(8, 6, tableDatum_r41.value, \"1.1-1\"), tableDatum_r41.constraint), i0.ɵɵsanitizeHtml);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_tr_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 31)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtemplate(5, MyMeasurementComponent_div_6_table_6_tr_23_div_5_Template, 9, 11, \"div\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtemplate(7, MyMeasurementComponent_div_6_table_6_tr_23_div_7_Template, 9, 11, \"div\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtemplate(9, MyMeasurementComponent_div_6_table_6_tr_23_div_9_Template, 9, 11, \"div\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtemplate(11, MyMeasurementComponent_div_6_table_6_tr_23_div_11_Template, 9, 11, \"div\", 27);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const measurementDate_r27 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(3, 5, measurementDate_r27.date, \"ll\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", measurementDate_r27.night);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", measurementDate_r27.morning);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", measurementDate_r27.afternoon);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", measurementDate_r27.evening);\n  }\n}\nfunction MyMeasurementComponent_div_6_table_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 29)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"amDateFormat\");\n    i0.ɵɵpipe(9, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"amDateFormat\");\n    i0.ɵɵpipe(13, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15);\n    i0.ɵɵpipe(16, \"amDateFormat\");\n    i0.ɵɵpipe(17, \"amDateFormat\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19);\n    i0.ɵɵpipe(20, \"amDateFormat\");\n    i0.ɵɵpipe(21, \"amDateFormat\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(22, \"tbody\");\n    i0.ɵɵtemplate(23, MyMeasurementComponent_div_6_table_6_tr_23_Template, 12, 8, \"tr\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"tfoot\")(25, \"tr\");\n    i0.ɵɵelement(26, \"td\")(27, \"td\")(28, \"td\")(29, \"td\")(30, \"td\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(5, 10, \"DATE\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(8, 12, \"1970-01-01T00:00:00\", \"LT\"), \"-\", i0.ɵɵpipeBind2(9, 15, \"1970-01-01T04:59:00\", \"LT\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(12, 18, \"1970-01-01T05:00:00\", \"LT\"), \"-\", i0.ɵɵpipeBind2(13, 21, \"1970-01-01T10:59:00\", \"LT\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(16, 24, \"1970-01-01T11:00:00\", \"LT\"), \"-\", i0.ɵɵpipeBind2(17, 27, \"1970-01-01T16:59:00\", \"LT\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(20, 30, \"1970-01-01T17:00:00\", \"LT\"), \"-\", i0.ɵɵpipeBind2(21, 33, \"1970-01-01T23:59:00\", \"LT\"), \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.model.tableStandardDay.measurementDates);\n  }\n}\nfunction MyMeasurementComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtemplate(1, MyMeasurementComponent_div_6_div_1_Template, 2, 3, \"div\", 10);\n    i0.ɵɵtemplate(2, MyMeasurementComponent_div_6_div_2_Template, 2, 3, \"div\", 10);\n    i0.ɵɵelementStart(3, \"div\", 11);\n    i0.ɵɵtemplate(4, MyMeasurementComponent_div_6_table_4_Template, 15, 7, \"table\", 12);\n    i0.ɵɵtemplate(5, MyMeasurementComponent_div_6_table_5_Template, 15, 6, \"table\", 13);\n    i0.ɵɵtemplate(6, MyMeasurementComponent_div_6_table_6_Template, 31, 36, \"table\", 14);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.graph);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.graphStandardDay);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.table && ctx_r1.model.table.kind === \"singleColumn\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.table && ctx_r1.model.table.kind === \"multiColumn\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.model.tableStandardDay);\n  }\n}\nfunction MyMeasurementComponent_div_7_tr_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"constraintText\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 3, \"VALUE\"), \":\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(6, 5, ctx_r44.model.popupMeasurement.constraint), \" \", ctx_r44.model.popupMeasurement.value, \" \");\n  }\n}\nfunction MyMeasurementComponent_div_7_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r45 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 2, \"VALUE\"), \":\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r45.model.popupMeasurement.values.join(\", \"), \" \");\n  }\n}\nfunction MyMeasurementComponent_div_7_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(3, 2, \"COMMENT\"), \":\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r46.model.popupMeasurement.comment);\n  }\n}\nfunction MyMeasurementComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r48 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_7_Template_div_click_0_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r47 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r47.hidePopup());\n    });\n    i0.ɵɵelementStart(1, \"div\", 35)(2, \"h3\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"table\", 36)(6, \"tr\")(7, \"td\", 37);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵpipe(12, \"amDateFormat\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(13, MyMeasurementComponent_div_7_tr_13_Template, 7, 7, \"tr\", 38);\n    i0.ɵɵtemplate(14, MyMeasurementComponent_div_7_tr_14_Template, 6, 4, \"tr\", 38);\n    i0.ɵɵtemplate(15, MyMeasurementComponent_div_7_tr_15_Template, 6, 4, \"tr\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"div\", 39)(17, \"button\", 40);\n    i0.ɵɵlistener(\"click\", function MyMeasurementComponent_div_7_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r48);\n      const ctx_r49 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r49.hidePopup());\n    });\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵelement(20, \"i\", 41);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(4, 7, \"MEASUREMENT_TITLE\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", i0.ɵɵpipeBind1(9, 9, \"TIMESTAMP\"), \":\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(12, 11, ctx_r2.model.popupMeasurement.timestamp, \"LLL\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.model.popupMeasurement.kind === \"singleValue\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.model.popupMeasurement.kind === \"multiValue\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.model.popupMeasurement.comment);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(19, 14, \"CLOSE\"), \" \");\n  }\n}\nexport let MyMeasurementComponent = /*#__PURE__*/(() => {\n  class MyMeasurementComponent {\n    constructor(appContext, config, tables, graphs, measurementsService, document) {\n      this.appContext = appContext;\n      this.config = config;\n      this.tables = tables;\n      this.graphs = graphs;\n      this.measurementsService = measurementsService;\n      this.document = document;\n      this.onOrientationChange = () => {\n        this.retrieveMeasurements();\n      };\n      this.retrieveMeasurements = () => {\n        const filter = this.model.filter;\n        this.measurementsService.list(this.model.measurementRef, filter).then(response => {\n          this.model.state = 'Loaded';\n          this.resetGraphsAndTables();\n          this.model.measurementsResult = response;\n          if (this.model.measurementRef.name === 'MEASUREMENT_TYPE_' + MeasurementTypeName.BLOOD_PRESSURE.toUpperCase()) {\n            this.mergeBloodPressureDataAndRender(filter);\n          } else if (this.model.measurementRef.name === 'MEASUREMENT_TYPE_' + MeasurementTypeName.SPIROMETRY.toUpperCase()) {\n            this.mergeSpirometryDataAndRender(filter);\n          } else {\n            this.mergeDataAndRender(filter);\n          }\n        }).catch(this.onError);\n      };\n      this.resetGraphsAndTables = () => {\n        this.model.table = undefined;\n        this.model.graph = undefined;\n        this.model.graphStandardDay = undefined;\n        this.model.tableStandardDay = undefined;\n      };\n      this.mergeBloodPressureDataAndRender = filter => {\n        this.measurementsService.list(this.createPulseMeasurementRef(), filter).then(extraPulseMeasurement => {\n          const bloodPressureMeasurements = this.model.measurementsResult.measurements;\n          const pulseMeasurements = extraPulseMeasurement.measurements;\n          const mergedMeasurements = this.mergeBloodPressureMeasurements(bloodPressureMeasurements, pulseMeasurements);\n          this.model.measurementsResult = mergedMeasurements;\n          this.render(this.model);\n          this.model.hasNoMeasurements = this.calculateHasNoMeasurements();\n        });\n      };\n      this.createPulseMeasurementRef = () => {\n        const bloodPressureURL = this.model.measurementRef.link;\n        const pulseName = MeasurementTypeName.PULSE;\n        const pulseURLPrefix = bloodPressureURL.substring(0, bloodPressureURL.indexOf('blood_pressure'));\n        const pulseURL = pulseURLPrefix + pulseName;\n        return {\n          name: pulseName,\n          icon: '',\n          link: pulseURL\n        };\n      };\n      this.mergeBloodPressureMeasurements = (bloodPressureMeasurements, pulseMeasurements) => {\n        const mergedMeasurements = {\n          type: MeasurementTypeName.BLOOD_PRESSURE,\n          unit: 'mmHg, bpm',\n          measurements: []\n        };\n        let i = 0;\n        let j = 0;\n        while (i < bloodPressureMeasurements.length && j < pulseMeasurements.length) {\n          const bloodPressureMeasurement = bloodPressureMeasurements[i];\n          const pulseMeasurement = pulseMeasurements[j];\n          if (new Date(bloodPressureMeasurement.timestamp).getTime() > new Date(pulseMeasurement.timestamp).getTime()) {\n            mergedMeasurements.measurements.push(bloodPressureMeasurement);\n            i++;\n          } else if (new Date(bloodPressureMeasurement.timestamp).getTime() === new Date(pulseMeasurement.timestamp).getTime()) {\n            const newMeasurement = bloodPressureMeasurement;\n            const pulseValue = pulseMeasurement.measurement.value;\n            newMeasurement.measurement.pulse = pulseValue;\n            mergedMeasurements.measurements.push(newMeasurement);\n            i++;\n            j++;\n          } else {\n            j++;\n          }\n        }\n        if (i < bloodPressureMeasurements.length) {\n          mergedMeasurements.measurements = mergedMeasurements.measurements.concat(bloodPressureMeasurements.slice(i));\n        }\n        return mergedMeasurements;\n      };\n      this.mergeSpirometryDataAndRender = filter => {\n        const measurementsResult = this.model.measurementsResult;\n        const additionalMeasurementTypes = [MeasurementTypeName.FEV6, MeasurementTypeName.FEV1_PERCENTAGE, MeasurementTypeName.FEV6_PERCENTAGE];\n        const mergedMeasurements = {\n          type: MeasurementTypeName.SPIROMETRY,\n          unit: 'L, %',\n          measurements: measurementsResult.measurements.map(baseMeasurement => {\n            const newMeasurement = baseMeasurement;\n            const severity = baseMeasurement.severity ? baseMeasurement.severity : undefined;\n            newMeasurement.measurement[MeasurementTypeName.FEV1] = {\n              value: baseMeasurement.measurement.value,\n              severity: severity\n            };\n            return newMeasurement;\n          })\n        };\n        // TODO: This can probably be modeled way cleaner with rxjs\n        const requests = [];\n        additionalMeasurementTypes.forEach(typeName => {\n          const deferred = this.defer();\n          requests.push(deferred.promise);\n          const measurementRef = this.createSpirometryMeasurementRef(typeName);\n          this.measurementsService.list(measurementRef, filter).then(extraMeasurements => {\n            let i = 0;\n            let j = 0;\n            while (i < mergedMeasurements.measurements.length && j < extraMeasurements.measurements.length) {\n              const baseMeasurement = mergedMeasurements.measurements[i];\n              const extraMeasurement = extraMeasurements.measurements[j];\n              if (new Date(baseMeasurement.timestamp).getTime() < new Date(extraMeasurement.timestamp).getTime()) {\n                mergedMeasurements.measurements[i] = baseMeasurement;\n                i++;\n              } else if (new Date(baseMeasurement.timestamp).getTime() === new Date(extraMeasurement.timestamp).getTime()) {\n                const newMeasurement = baseMeasurement;\n                const severity = extraMeasurement.severity ? extraMeasurement.severity : undefined;\n                newMeasurement.measurement[measurementRef.name] = {\n                  value: extraMeasurement.measurement.value,\n                  severity: severity\n                };\n                mergedMeasurements.measurements[i] = newMeasurement;\n                i++;\n                j++;\n              } else {\n                j++;\n              }\n            }\n            deferred.resolve();\n          });\n        });\n        Promise.all(requests).then(() => {\n          this.model.measurementsResult = mergedMeasurements;\n          this.render(this.model);\n          this.model.hasNoMeasurements = this.calculateHasNoMeasurements();\n        });\n      };\n      this.createSpirometryMeasurementRef = typeName => {\n        var _a;\n        const measurementUrl = (_a = this.model.measurementRef) === null || _a === void 0 ? void 0 : _a.link;\n        const measurementUrlBase = measurementUrl.substring(0, measurementUrl.indexOf('measurements?type=')) + 'measurements?type=';\n        return {\n          name: typeName,\n          icon: '',\n          link: measurementUrlBase + encodeURIComponent(typeName)\n        };\n      };\n      this.mergeDataAndRender = filter => {\n        const measurementsResult = this.model.measurementsResult;\n        if (measurementsResult.measurements.length > 0) {\n          this.model.measurementsResult.type = measurementsResult.measurements[0].type;\n          this.model.measurementsResult.unit = measurementsResult.measurements[0].measurement.unit;\n          this.render(this.model);\n        }\n        this.model.hasNoMeasurements = this.calculateHasNoMeasurements();\n      };\n      this.onError = error => {\n        this.model.state = 'Failed';\n        console.error(`Failed to load measurements due to error: ${error}`);\n      };\n      this.showPopup = datum => {\n        if ('comment' in datum && datum.comment !== undefined) {\n          this.model.popupMeasurement = datum;\n        }\n      };\n      this.showFilter = filter => {\n        this.model.state = 'Loading';\n        this.model.hasNoMeasurements = false;\n        this.model.filter = filter;\n        this.retrieveMeasurements();\n      };\n      this.render = model => {\n        this.model.table = this.tables.createTable(model.measurementsResult);\n        this.model.graph = this.graphs.createGraph(model.measurementsResult);\n        if (this.model.measurementRef.name === 'MEASUREMENT_TYPE_' + MeasurementTypeName.BLOOD_SUGAR.toUpperCase() || this.model.measurementRef.name === 'MEASUREMENT_TYPE_' + MeasurementTypeName.BLOOD_SUGAR_MG_DL.toUpperCase()) {\n          this.model.graphStandardDay = this.graphs.createStandardDayGraph(model.measurementsResult);\n          this.model.tableStandardDay = this.tables.createStandardDayTable(model.measurementsResult);\n        }\n      };\n      this.calculateHasNoMeasurements = () => {\n        const noSeriesData = this.model.graph === undefined || this.model.graph.data.datasets.length === 0;\n        const noTableData = this.model.table === undefined || this.model.table.data.length === 0;\n        return noTableData && noSeriesData;\n      };\n      const measurementRef = this.appContext.requestParams.getAndClear('selectedMeasurement');\n      this.shouldShowSeverity = this.config.getAppConfig().showSeverity;\n      this.model = {\n        state: 'Loading',\n        measurementRef: measurementRef,\n        measurementsResult: {\n          measurements: []\n        },\n        hasNoMeasurements: false,\n        hasOtherMeasurements: false,\n        filters: [{\n          label: 'SHOW_1_WEEK',\n          filter: FilterType.WEEK\n        }, {\n          label: 'SHOW_1_MONTH',\n          filter: FilterType.MONTH\n        }, {\n          label: 'SHOW_3_MONTHS',\n          filter: FilterType.QUARTER\n        }, {\n          label: 'SHOW_1_YEAR',\n          filter: FilterType.YEAR\n        }, {\n          label: 'SHOW_ALL',\n          filter: FilterType.ALL\n        }],\n        filter: FilterType.WEEK,\n        graph: undefined,\n        graphStandardDay: undefined,\n        table: undefined,\n        tableStandardDay: undefined\n      };\n    }\n    ngOnInit() {\n      var _a, _b, _c;\n      this.model.hasOtherMeasurements = this.appContext.requestParams.get('hasOtherMeasurements');\n      this.retrieveMeasurements();\n      (_c = (_b = (_a = this.document.defaultView) === null || _a === void 0 ? void 0 : _a.screen) === null || _b === void 0 ? void 0 : _b.orientation) === null || _c === void 0 ? void 0 : _c.addEventListener('change', this.onOrientationChange);\n    }\n    defer() {\n      const deferred = {};\n      const promise = new Promise(function (resolve, reject) {\n        deferred.resolve = resolve;\n        deferred.reject = reject;\n      });\n      deferred.promise = promise;\n      return deferred;\n    }\n    hidePopup() {\n      delete this.model.popupMeasurement;\n    }\n    ngOnDestroy() {\n      var _a, _b, _c;\n      (_c = (_b = (_a = this.document.defaultView) === null || _a === void 0 ? void 0 : _a.screen) === null || _b === void 0 ? void 0 : _b.orientation) === null || _c === void 0 ? void 0 : _c.removeEventListener('change', this.onOrientationChange);\n    }\n    trackByIndex(index) {\n      return index;\n    }\n    severity(severity) {\n      if (!this.config.getAppConfig().showSeverity) {\n        return 'severity-none';\n      }\n      if (severity !== undefined) {\n        return `severity-${severity}`;\n      } else {\n        return 'severity-none';\n      }\n    }\n  }\n  MyMeasurementComponent.ɵfac = function MyMeasurementComponent_Factory(t) {\n    return new (t || MyMeasurementComponent)(i0.ɵɵdirectiveInject(i1.StatePassingService), i0.ɵɵdirectiveInject(i2.ConfigService), i0.ɵɵdirectiveInject(i3.TablesService), i0.ɵɵdirectiveInject(i4.GraphsService), i0.ɵɵdirectiveInject(i5.MeasurementsService), i0.ɵɵdirectiveInject(DOCUMENT));\n  };\n  MyMeasurementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MyMeasurementComponent,\n    selectors: [[\"app-my-measurement\"]],\n    decls: 8,\n    vars: 11,\n    consts: [[1, \"container\"], [3, \"title\", \"showBackBtn\", \"showHomeBtn\"], [1, \"content\"], [\"id\", \"data_range_selectors\"], [\"class\", \"data_range_selector\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"stateModel\", \"hasNoData\", \"noDataMessage\", \"loadingMessage\", \"failedMessage\"], [\"id\", \"graphs_and_table\", 4, \"ngIf\"], [\"class\", \"light-box-dimmer\", 3, \"click\", 4, \"ngIf\"], [1, \"data_range_selector\", 3, \"ngClass\", \"click\"], [\"id\", \"graphs_and_table\"], [\"class\", \"graph_wrapper\", 4, \"ngIf\"], [1, \"my_results_table\"], [\"id\", \"single-value-table\", 4, \"ngIf\"], [\"id\", \"multi-value-table\", 4, \"ngIf\"], [\"id\", \"standard-day-table\", \"class\", \"my_results_table\", 4, \"ngIf\"], [1, \"graph_wrapper\"], [\"baseChart\", \"\", 3, \"type\", \"data\", \"options\"], [\"id\", \"single-value-table\"], [\"id\", \"measurement-item\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"measurement-item\", 3, \"click\"], [1, \"severity-and-comment\"], [1, \"fas\", \"fa-circle\", 3, \"ngClass\"], [1, \"comment-icon\", 3, \"ngClass\"], [1, \"fal\", \"fa-sticky-note\"], [1, \"measurement-table-value\"], [\"id\", \"multi-value-table\"], [2, \"width\", \"2em\"], [4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\", 1, \"fas\", \"fa-circle\", 3, \"ngClass\"], [\"id\", \"standard-day-table\", 1, \"my_results_table\"], [\"id\", \"measurement-date-item\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"measurement-date-item\"], [3, \"click\"], [3, \"innerHTML\"], [1, \"light-box-dimmer\", 3, \"click\"], [\"id\", \"light-box\", 1, \"light-box\"], [1, \"measurement-info-table\"], [1, \"row-header\"], [4, \"ngIf\"], [\"id\", \"action-buttons\", 1, \"flex-column\"], [1, \"footer-button\", \"center-button\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon\", \"fas\", \"fa-times-circle\"]],\n    template: function MyMeasurementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"header-menu\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtemplate(4, MyMeasurementComponent_div_4_Template, 3, 6, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"loading-state\", 5);\n        i0.ɵɵtemplate(6, MyMeasurementComponent_div_6_Template, 7, 5, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(7, MyMeasurementComponent_div_7_Template, 21, 16, \"div\", 7);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"title\", ctx.model.measurementRef.name)(\"showBackBtn\", true)(\"showHomeBtn\", ctx.model.hasOtherMeasurements);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.model.filters);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"stateModel\", ctx.model.state)(\"hasNoData\", ctx.model.hasNoMeasurements)(\"noDataMessage\", \"NO_MEASUREMENTS_AVAILABLE\")(\"loadingMessage\", \"MY_MEASUREMENTS_LOADING\")(\"failedMessage\", \"MY_MEASUREMENTS_FAILED\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.state === \"Loaded\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.popupMeasurement);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgForOf, i6.NgIf, i7.HeaderComponent, i8.LoadingStateComponent, i9.BaseChartDirective, i6.DecimalPipe, i10.SeverityPipe, i11.ConstraintColorPipe, i11.ConstraintTextPipe, i12.TranslatePipe, i13.DateFormatPipe]\n  });\n  return MyMeasurementComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _asyncToGenerator from \"D:/Users/raghavendra/Desktop/ODE/OPTH/New folder/testing/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { from } from 'rxjs';\nimport { LOGIN_TYPE_INFO } from '@utils/globals';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/state-services/user-session.service\";\nimport * as i2 from \"src/app/services/state-services/state-passing.service\";\nimport * as i3 from \"src/app/services/rest-api-services/authentication.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@ng-idle/core\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../header/header/header.component\";\nimport * as i9 from \"@ngx-translate/core\";\nfunction LoginComponent_form_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelement(1, \"i\", 26);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r2.model.error), \" \");\n  }\n}\nfunction LoginComponent_form_3_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelement(1, \"i\", 28);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r3.model.info), \" \");\n  }\n}\nfunction LoginComponent_form_3_i_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 29);\n  }\n}\nfunction LoginComponent_form_3_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"LOGIN_FORM_REMEMBER_ME_DISCLAIMER\"), \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    padding_when_notification: a0\n  };\n};\nconst _c1 = function (a0) {\n  return {\n    warning: a0\n  };\n};\nfunction LoginComponent_form_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 4, 5);\n    i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_form_3_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.submit());\n    });\n    i0.ɵɵtemplate(2, LoginComponent_form_3_div_2_Template, 4, 3, \"div\", 6);\n    i0.ɵɵtemplate(3, LoginComponent_form_3_div_3_Template, 4, 3, \"div\", 7);\n    i0.ɵɵelementStart(4, \"div\", 8)(5, \"div\", 9)(6, \"div\", 10);\n    i0.ɵɵelement(7, \"i\", 11);\n    i0.ɵɵelementStart(8, \"input\", 12, 13);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_8_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.model.username = $event);\n    });\n    i0.ɵɵpipe(10, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"div\", 10);\n    i0.ɵɵelement(12, \"i\", 14);\n    i0.ɵɵelementStart(13, \"input\", 15, 16);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_13_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r12.model.password = $event);\n    });\n    i0.ɵɵpipe(15, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(16, \"div\", 17)(17, \"button\", 18);\n    i0.ɵɵtext(18);\n    i0.ɵɵpipe(19, \"translate\");\n    i0.ɵɵtemplate(20, LoginComponent_form_3_i_20_Template, 1, 0, \"i\", 19);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(21, \"div\", 20)(22, \"label\", 21);\n    i0.ɵɵtext(23);\n    i0.ɵɵpipe(24, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"input\", 22, 23);\n    i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_form_3_Template_input_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.model.rememberMe = $event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(27, LoginComponent_form_3_div_27_Template, 3, 3, \"div\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const _r1 = i0.ɵɵreference(1);\n    const _r4 = i0.ɵɵreference(9);\n    const _r5 = i0.ɵɵreference(14);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(25, _c0, ctx_r0.model.error));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.model.error);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.model.info);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(27, _c1, !_r4.valid && !_r4.pristine));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(29, _c1, !_r4.valid && !_r4.pristine));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(10, 17, \"LOGIN_FORM_USERNAME\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.model.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(31, _c1, !_r5.valid && !_r5.pristine));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c1, !_r5.valid && !_r5.pristine));\n    i0.ɵɵadvance(1);\n    i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(15, 19, \"LOGIN_FORM_PASSWORD\"));\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.model.password);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", !_r1.form.valid || ctx_r0.model.state === \"Loading\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.model.state !== \"Loading\" ? i0.ɵɵpipeBind1(19, 21, \"LOGIN_LOGIN_BUTTON\") : \"\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.model.state === \"Loading\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(24, 23, \"LOGIN_FORM_REMEMBER_ME\"), \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.model.rememberMe);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.model.rememberMe);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(userSession, appContext, authentication, router, idle) {\n      this.userSession = userSession;\n      this.appContext = appContext;\n      this.authentication = authentication;\n      this.router = router;\n      this.idle = idle;\n      this.model = {\n        showPopup: false,\n        showLoginForm: false,\n        rememberMe: false,\n        state: 'Initial'\n      };\n    }\n    ngOnInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        _this.stopIdleWatcher();\n        _this.setupErrorMessage();\n        from(_this.userSession.init());\n        try {\n          const root = yield _this.userSession.init();\n          _this.root = root;\n          _this.userSession.startSilentLogin(root, error => _this.loginFailed(_this, error));\n        } catch (err) {\n          _this.connectionError();\n        }\n      })();\n    }\n    loginFailed(component, response) {\n      var _a;\n      const status = response.status;\n      const data = response.data;\n      component.model.showLoginForm = true;\n      if (status && status > -1) {\n        switch (status) {\n          case 401:\n            if (data.code === 'PASSWORD_EXPIRED') {\n              const info = {\n                username: component.model.username,\n                changePasswordUrl: (_a = component.root) === null || _a === void 0 ? void 0 : _a.links.auth\n              };\n              component.appContext.requestParams.set('userInfo', info);\n              component.appContext.requestParams.set('forceChange', true);\n              component.router.navigate(['/change_password']);\n            } else {\n              delete component.model.password;\n              component.model.error = data.code;\n            }\n            break;\n          default:\n            component.model.error = 'OPENTELE_DOWN_TEXT';\n            break;\n        }\n      }\n      this.model.state = 'Loaded';\n    }\n    submit() {\n      this.model.state = 'Loading';\n      const root = this.root;\n      if (root === undefined || this.model.username === undefined || this.model.password === undefined) {\n        return;\n      }\n      const credentials = {\n        username: this.model.username,\n        password: this.model.password\n      };\n      const completed = response => {\n        if ('data' in response) {\n          this.loginFailed(this, response);\n          return;\n        }\n        const {\n          claims,\n          canChangePassword,\n          logoutUrl,\n          organizations\n        } = response;\n        this.userSession.completeLogin(root, claims, canChangePassword, logoutUrl, organizations).then(() => {\n          const loginInfo = LOGIN_TYPE_INFO.get();\n          if (loginInfo) {\n            this.model.info = loginInfo;\n          }\n          this.model.state = 'Loaded';\n        });\n      };\n      this.authentication.login(root.links.auth, credentials, this.model.rememberMe).subscribe(completed);\n    }\n    setupErrorMessage() {\n      const key = 'authenticationError';\n      if (!this.appContext.requestParams.containsKey(key)) {\n        this.model.error = '';\n        return;\n      }\n      this.model.error = this.appContext.requestParams.getAndClear(key);\n    }\n    connectionError() {\n      this.model.error = 'OPENTELE_UNAVAILABLE_TEXT';\n    }\n    stopIdleWatcher() {\n      if (this.idle.isRunning()) {\n        this.idle.stop();\n      }\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.UserSessionService), i0.ɵɵdirectiveInject(i2.StatePassingService), i0.ɵɵdirectiveInject(i3.AuthenticationService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i5.Idle));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 4,\n    vars: 2,\n    consts: [[1, \"container\"], [3, \"showLogo\"], [1, \"content\", \"space_between\"], [\"id\", \"login-form\", \"class\", \"login_form\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 3, \"ngClass\", \"ngSubmit\", 4, \"ngIf\"], [\"id\", \"login-form\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"login_form\", 3, \"ngClass\", \"ngSubmit\"], [\"loginForm\", \"ngForm\"], [\"class\", \"notification error\", 4, \"ngIf\"], [\"id\", \"login-info\", \"class\", \"notification info\", 4, \"ngIf\"], [1, \"fill\"], [\"id\", \"input-container\"], [1, \"login_input\", 3, \"ngClass\"], [1, \"fal\", \"fa-user\", 3, \"ngClass\"], [\"id\", \"username\", \"required\", \"\", \"focusOnLoad\", \"\", \"name\", \"username\", \"type\", \"text\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"username\", \"ngModel\"], [1, \"fal\", \"fa-lock-alt\", 3, \"ngClass\"], [\"id\", \"password\", \"name\", \"password\", \"required\", \"\", \"type\", \"text\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"password\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\"], [\"password\", \"ngModel\"], [1, \"button_container\"], [\"type\", \"submit\", 3, \"disabled\"], [\"class\", \"fa fa-spinner fa-spin\", 4, \"ngIf\"], [\"id\", \"info-box-container\"], [\"for\", \"remember-me\"], [\"id\", \"remember-me\", \"name\", \"rememberMe\", \"type\", \"checkbox\", 3, \"ngModel\", \"ngModelChange\"], [\"rememberMe\", \"ngModel\"], [\"id\", \"disclaimer-text\", 4, \"ngIf\"], [1, \"notification\", \"error\"], [1, \"notification_icon\", \"fas\", \"fa-exclamation-triangle\"], [\"id\", \"login-info\", 1, \"notification\", \"info\"], [1, \"notification_icon\", \"fas\", \"fa-info-circle\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"], [\"id\", \"disclaimer-text\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"header-menu\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, LoginComponent_form_3_Template, 28, 35, \"form\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"showLogo\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.showLoginForm);\n      }\n    },\n    dependencies: [i6.NgClass, i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.CheckboxControlValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.HeaderComponent, i9.TranslatePipe]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
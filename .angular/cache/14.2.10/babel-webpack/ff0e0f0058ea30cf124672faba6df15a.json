{"ast":null,"code":"import { PINCODE_SET } from \"@utils/globals\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/state-services/state-passing.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngx-translate/core\";\nimport * as i4 from \"src/app/services/rest-api-services/authentication.service\";\nimport * as i5 from \"@services/oidc-services/oidc-utils.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/forms\";\nimport * as i8 from \"../../../header/header/header.component\";\nfunction SetPinCodeComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵelement(1, \"i\", 18);\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(3, 1, ctx_r0.model.error), \" \");\n  }\n}\nfunction SetPinCodeComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelement(1, \"i\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.model.info, \" \");\n  }\n}\nfunction SetPinCodeComponent_i_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 21);\n  }\n}\nexport let SetPinCodeComponent = /*#__PURE__*/(() => {\n  class SetPinCodeComponent {\n    constructor(appContext, router, translate, authentication, oidcService) {\n      this.appContext = appContext;\n      this.router = router;\n      this.translate = translate;\n      this.authentication = authentication;\n      this.oidcService = oidcService;\n      this.goBackToLogin = () => {\n        this.authentication.clearAllTokens();\n        this.oidcService.sendLogoutRequest(); // Needs to logout unless the user will be redirected\n        this.router.navigate([\"/login\"]);\n      };\n      this.getPinCode = () => {};\n      this.pinCodeMismatch = () => {\n        return !this.model.pinCode || this.model.pinCode.length < 4 || this.model.pinCode !== this.model.pinCodeRepeat;\n      };\n      this.savePinCode = () => {\n        this.model.state = \"Loading\";\n        const savePinCodeFailed = response => {\n          this.model.state = \"Failed\";\n          console.error(\"Failed to save PIN-code.\");\n          console.error(`Data: ${response}`);\n          console.error(JSON.stringify(response));\n          this.model.pinCode = undefined;\n          this.model.pinCodeRepeat = undefined;\n          this.model.error = \"LOGIN_FAILED_TO_SET_PIN_CODE\";\n        };\n        this.authentication.setPinCode(this.root.links.mfaPinCode, this.model.pinCode).then(response => {\n          PINCODE_SET.set(true);\n          this.model.state = \"Loaded\";\n          return this.completeLogin(response);\n        }).catch(savePinCodeFailed);\n      };\n      this.model = {\n        state: \"Initial\",\n        pinCode: undefined,\n        pinCodeRepeat: undefined,\n        error: \"\",\n        info: this.translate.instant(\"SET_PIN_CODE_INFO_TEXT\")\n      };\n      this.initModel();\n    }\n    initModel() {\n      if (!this.appContext.requestParams.containsKey(\"completeLogin\") || !this.appContext.requestParams.containsKey(\"root\")) {\n        this.router.navigate([\"/login\"]);\n        return;\n      }\n      this.completeLogin = this.appContext.requestParams.getAndClear(\"completeLogin\");\n      this.root = this.appContext.requestParams.getAndClear(\"root\");\n    }\n  }\n  SetPinCodeComponent.ɵfac = function SetPinCodeComponent_Factory(t) {\n    return new (t || SetPinCodeComponent)(i0.ɵɵdirectiveInject(i1.StatePassingService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.TranslateService), i0.ɵɵdirectiveInject(i4.AuthenticationService), i0.ɵɵdirectiveInject(i5.OidcUtilsService));\n  };\n  SetPinCodeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SetPinCodeComponent,\n    selectors: [[\"app-set-pin-code\"]],\n    decls: 26,\n    vars: 19,\n    consts: [[1, \"container\"], [3, \"showLogo\"], [1, \"content\", \"space_between\"], [\"class\", \"notification error\", 4, \"ngIf\"], [\"class\", \"notification info\", 4, \"ngIf\"], [1, \"fill\"], [\"id\", \"pin-code-form\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", 1, \"login_form\", 3, \"ngSubmit\"], [\"pinCodeForm\", \"ngForm\"], [\"id\", \"input-container\"], [1, \"login_input\"], [1, \"fal\", \"fa-lock-alt\"], [\"id\", \"pincode\", \"required\", \"\", \"type\", \"text\", \"inputmode\", \"numeric\", \"step\", \"1\", \"size\", \"13\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"name\", \"pinCode\", 1, \"pincode\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [\"id\", \"pincode-repeat\", \"required\", \"\", \"type\", \"text\", \"inputmode\", \"numeric\", \"step\", \"1\", \"size\", \"13\", \"autocomplete\", \"off\", \"autocorrect\", \"off\", \"autocapitalize\", \"off\", \"name\", \"pinCodeRepeat\", 1, \"pincode\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"], [1, \"button_container\"], [\"type\", \"button\", 1, \"button\", \"cancel\", 3, \"click\"], [\"type\", \"submit\", \"id\", \"save-pin-code\", 1, \"button\", 3, \"disabled\"], [\"class\", \"fa fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"notification\", \"error\"], [1, \"notification_icon\", \"fas\", \"fa-exclamation-triangle\"], [1, \"notification\", \"info\"], [1, \"notification_icon\", \"fas\", \"fa-info-circle\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"]],\n    template: function SetPinCodeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"header-menu\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtemplate(3, SetPinCodeComponent_div_3_Template, 4, 3, \"div\", 3);\n        i0.ɵɵtemplate(4, SetPinCodeComponent_div_4_Template, 3, 1, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5)(6, \"form\", 6, 7);\n        i0.ɵɵlistener(\"ngSubmit\", function SetPinCodeComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.savePinCode();\n        });\n        i0.ɵɵelementStart(8, \"div\", 8)(9, \"div\", 9);\n        i0.ɵɵelement(10, \"i\", 10);\n        i0.ɵɵelementStart(11, \"input\", 11);\n        i0.ɵɵlistener(\"ngModelChange\", function SetPinCodeComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.model.pinCode = $event;\n        });\n        i0.ɵɵpipe(12, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 9);\n        i0.ɵɵelement(14, \"i\", 10);\n        i0.ɵɵelementStart(15, \"input\", 12);\n        i0.ɵɵlistener(\"ngModelChange\", function SetPinCodeComponent_Template_input_ngModelChange_15_listener($event) {\n          return ctx.model.pinCodeRepeat = $event;\n        });\n        i0.ɵɵpipe(16, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"div\", 13)(18, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function SetPinCodeComponent_Template_button_click_18_listener() {\n          return ctx.goBackToLogin();\n        });\n        i0.ɵɵtext(19);\n        i0.ɵɵpipe(20, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(21, \"div\", 13)(22, \"button\", 15);\n        i0.ɵɵtext(23);\n        i0.ɵɵpipe(24, \"translate\");\n        i0.ɵɵtemplate(25, SetPinCodeComponent_i_25_Template, 1, 0, \"i\", 16);\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"showLogo\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.model == null ? null : ctx.model.error);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.model == null ? null : ctx.model.info);\n        i0.ɵɵadvance(7);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(12, 11, \"LOGIN_MFA_PINCODE\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.model.pinCode);\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(16, 13, \"LOGIN_MFA_PINCODE_REPEAT\"));\n        i0.ɵɵproperty(\"ngModel\", ctx.model.pinCodeRepeat);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(20, 15, \"CANCEL\"), \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.pinCodeMismatch() || ctx.model.state === \"Loading\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.model.state !== \"Loading\" ? i0.ɵɵpipeBind1(24, 17, \"LOGIN_PINCODE_SAVE_BUTTON\") : \"\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.model.state === \"Loading\");\n      }\n    },\n    dependencies: [i6.NgIf, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.RequiredValidator, i7.NgModel, i7.NgForm, i8.HeaderComponent, i3.TranslatePipe]\n  });\n  return SetPinCodeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
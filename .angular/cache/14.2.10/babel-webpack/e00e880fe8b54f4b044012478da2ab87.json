{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { StatePassingService as AuthGuard } from './services/state-services/state-passing.service';\nimport { OidcUtilsService as OidcGuard } from './services/oidc-services/oidc-utils.service';\nimport { ClinicianService as ClinicianGuard } from './services/rest-api-services/clinician.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'login',\n  loadChildren: () => import('./components/login/login-handler.module').then(\n  // Will handle oidc login\n  m => m.LoginHandlerModule)\n}, {\n  path: 'logout',\n  loadChildren: () => import('./components/logout/logout-handler.module').then(\n  // Will handle oidc logout\n  m => m.LogoutHandlerModule)\n}, {\n  path: 'reset_login',\n  loadChildren: () => import('./components/logout/reset-login-handler.module').then(\n  // Will handle oidc reset login\n  m => m.ResetLoginHandlerModule)\n},\n//----------------------------------------------------------------------------\n//------------------------Clinician app---------------------------------------\n//----------------------------------------------------------------------------\n{\n  path: 'create_patient',\n  canActivate: [AuthGuard, ClinicianGuard],\n  loadChildren: () => import('./components/create-patient/create-patient.module').then(m => m.CreatePatientModule)\n}, {\n  path: 'clinician_menu',\n  canActivate: [AuthGuard, ClinicianGuard],\n  loadChildren: () => import('./components/clinician-menu/clinician-menu.module').then(m => m.ClinicianMenuModule)\n},\n//----------------------------------------------------------------------------\n//-----------------------------OIDC-------------------------------------------\n//----------------------------------------------------------------------------\n{\n  path: 'oidc/success',\n  canActivate: [OidcGuard],\n  loadChildren: () => import('./components/oidc/oidc-login-success/oidc-login-success.module').then(m => m.OidcLoginSuccessModule)\n}, {\n  path: 'oidc/invalidate_sso',\n  canActivate: [OidcGuard],\n  loadChildren: () => import('./components/oidc/oidc-invalidate-sso-session/oidc-invalidate-sso-session.module').then(m => m.OidcInvalidateSsoSessionModule)\n}, {\n  path: 'pincode',\n  canActivate: [OidcGuard],\n  loadChildren: () => import('./components/oidc/set-pin-code/set-pin-code.module').then(m => m.SetPinCodeModule)\n}, {\n  path: 'pincode_login',\n  canActivate: [OidcGuard],\n  loadChildren: () => import('./components/oidc/pin-code-login/pin-code-login.module').then(m => m.PinCodeLoginModule)\n},\n//----------------------------------------------------------------------------\n{\n  path: 'error',\n  loadChildren: () => import('./components/errors/errors.module').then(m => m.ErrorsModule)\n}, {\n  path: 'acknowledgements',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/acknowledgements/acknowledgements.module').then(m => m.AcknowledgementsModule)\n}, {\n  path: 'menu',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/menu/menu.module').then(m => m.MenuModule)\n}, {\n  path: 'messages',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/messages/messages.module').then(m => m.MessagesModule)\n}, {\n  path: 'links_categories',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/category-links/category-links.module').then(m => m.CategoryLinksModule)\n}, {\n  path: 'calendar',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/calendar/calendar.module').then(m => m.CalendarModule)\n}, {\n  path: 'questionnaire_results',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/questionnaire-results/questionnaire-results.module').then(m => m.QuestionnaireResultsModule)\n}, {\n  path: 'my_measurements',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/my-measurements/my-measurements.module').then(m => m.MyMeasurementsModule)\n}, {\n  path: 'change_password',\n  loadChildren: () => import('./components/change-password/change-password.module').then(m => m.ChangePasswordModule)\n}, {\n  path: 'questionnaires',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/questionnaires/questionnaires.module').then(m => m.QuestionnairesModule)\n}, {\n  path: 'joinConference',\n  canActivate: [AuthGuard],\n  loadChildren: () => import('./components/conference/conference.module').then(m => m.ConferenceModule)\n}, {\n  path: '',\n  redirectTo: '/login',\n  pathMatch: 'full'\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    providers: [OidcGuard],\n    imports: [RouterModule.forRoot(routes, {\n      useHash: true,\n      onSameUrlNavigation: 'reload'\n    }), RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}
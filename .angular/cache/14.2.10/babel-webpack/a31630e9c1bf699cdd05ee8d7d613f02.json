{"ast":null,"code":"import { lastValueFrom } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@services/util-services/util.service\";\nimport * as i2 from \"@angular/common/http\";\nexport let ClinicianService = /*#__PURE__*/(() => {\n  class ClinicianService {\n    constructor(util, http) {\n      this.util = util;\n      this.http = http;\n      this.userIsClinician = false;\n    }\n    setIsClinician(bool) {\n      this.userIsClinician = bool;\n    }\n    isClinician() {\n      return this.userIsClinician;\n    }\n    canActivate() {\n      return this.userIsClinician;\n    }\n    currentClinician(root) {\n      var _a;\n      const clinicianUrl = (_a = root === null || root === void 0 ? void 0 : root.links) === null || _a === void 0 ? void 0 : _a.clinician;\n      if (!this.util.exists(clinicianUrl)) {\n        throw new TypeError('Root object does not contain a link relation to clinician');\n      }\n      return lastValueFrom(this.http.get(clinicianUrl));\n    }\n  }\n  ClinicianService.ɵfac = function ClinicianService_Factory(t) {\n    return new (t || ClinicianService)(i0.ɵɵinject(i1.Utils), i0.ɵɵinject(i2.HttpClient));\n  };\n  ClinicianService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClinicianService,\n    factory: ClinicianService.ɵfac,\n    providedIn: 'root'\n  });\n  return ClinicianService;\n})();","map":null,"metadata":{},"sourceType":"module"}
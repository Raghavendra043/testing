{"ast":null,"code":"import { ReplaySubject } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nexport let HttpNotificationsService = /*#__PURE__*/(() => {\n  class HttpNotificationsService {\n    constructor() {\n      this.onRequestStartedListeners = [];\n      this.onRequestEndedListeners = [];\n      this.count = 0;\n      this.httpLoading = new ReplaySubject(1);\n      this.subscribeOnRequestStarted = listener => {\n        this.onRequestStartedListeners.push(listener);\n      };\n      this.fireRequestStarted = request => {\n        this.increment();\n        this.onRequestStartedListeners.forEach(listener => {\n          listener(request);\n        });\n        return request;\n      };\n      this.subscribeOnRequestEnded = listener => {\n        this.onRequestEndedListeners.push(listener);\n      };\n      this.fireRequestEnded = response => {\n        this.decrement();\n        this.onRequestEndedListeners.forEach(listener => {\n          listener(response);\n        });\n        return response;\n      };\n    }\n    httpProgress() {\n      return this.httpLoading.asObservable();\n    }\n    setHttpProgressStatus(inprogess) {\n      this.httpLoading.next(inprogess);\n    }\n    increment() {\n      this.count++;\n    }\n    decrement() {\n      if (this.count > 0) this.count--;\n    }\n    getCount() {\n      return this.count;\n    }\n    getRequestCount() {\n      return this.getCount();\n    }\n  }\n  HttpNotificationsService.ɵfac = function HttpNotificationsService_Factory(t) {\n    return new (t || HttpNotificationsService)();\n  };\n  HttpNotificationsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: HttpNotificationsService,\n    factory: HttpNotificationsService.ɵfac,\n    providedIn: \"root\"\n  });\n  return HttpNotificationsService;\n})();","map":null,"metadata":{},"sourceType":"module"}